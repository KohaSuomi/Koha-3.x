{
  "swagger": "2.0",
  "info": {
    "title": "Koha REST API",
    "version": "1",
    "license": {
      "name": "GPL v3",
      "url": "http://www.gnu.org/licenses/gpl.txt"
    },
    "contact": {
      "name": "Koha Team",
      "url": "http://koha-community.org/"
    }
  },
  "basePath": "/api/v1",
  "paths": {
    "/borrowers": {
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Borrowers",
        "x-koha-permission": {
          "borrowers": "*"
        },
        "operationId": "listBorrowers",
        "tags": ["borrowers"],
        "summary": "just a summary",
        "description": "long description",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of borrowers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/borrower"
              }
            }
          }
        },
        "security": [
          { "multi_key_auth": [] }
        ]
      }
    },
    "/borrowers/{borrowernumber}": {
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Borrowers",
        "x-koha-permission": {
          "borrowers": "*"
        },
        "operationId": "getBorrower",
        "tags": ["borrowers"],
        "parameters": [
          {
            "$ref": "#/parameters/borrowernumberPathParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A borrower",
            "schema": {
              "$ref": "#/definitions/borrower"
            }
          },
          "404": {
            "description": "Borrower not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          { "multi_key_auth": [] }
        ]
      }
    },
    "/auth/session": {
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Auth",
        "x-koha-permission": {
          "auth": "get_session"
        },
        "operationId": "getSession",
        "tags": ["auth"],
        "parameters": [
          {
            "$ref": "#/parameters/session"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A borrower with SSO-relevant fields",
            "schema": {
              "$ref": "#/definitions/session"
            }
          },
          "404": {
            "description": "Session not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          { "multi_key_auth": [] }
        ]
      }
    }
  },
  "definitions": {
    "borrower": {
      "type": "object",
      "properties": {
        "borrowernumber": {
          "$ref": "#/definitions/borrowernumber"
        },
        "cardnumber": {
          "description": "library assigned ID number for borrowers"
        },
        "surname": {
          "description": "borrower's last name"
        },
        "firstname": {
          "description": "borrower's first name"
        }
      }
    },
    "session": {
      "type": "object",
      "properties": {
        "email": {
          "description": "borrower's primary email address"
        },
        "lastname": {
          "description": "borrower's last name"
        },
        "firstname": {
          "description": "borrower's first name"
        }
      }
    },
    "testedSession": {
      "type": "object",
      "properties": {
        "sessionid": {
          "description": "The Koha sessionid to be tested",
          "type": "string"
        }
      },
      "required": ["sessionid"]
    },
    "borrowernumber": {
      "description": "Borrower internal identifier"
    },
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "description": "Error message",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "borrowernumberPathParam": {
      "name": "borrowernumber",
      "in": "path",
      "description": "Internal borrower identifier",
      "required": "true",
      "type": "integer"
    },
    "session": {
      "name": "session",
      "description": "The CGISESSID Cookie used to authenticate a session",
      "in": "body",
      "required": "true",
      "schema" : {
        "$ref": "#/definitions/testedSession"
      }
    }
  },
  "securityDefinitions": {
    "multi_key_auth": {
      "type": "custom",
      "description": "Example: 'Authorization: Koha 1:0f049b5ba2f04da7e719b7166dd9e1b0efacf23747798f19efe51eb6e437f84c'\n\nConstructing the Authorization header\n\n-You brand the authorization header with 'Koha'\n-Then you give the userid/cardnumber of the user authenticating.\n-Then the hashed signature.\n\nThe signature is a HMAC-SHA256-HEX hash of several elements of the request,\nseparated by spaces:\n - HTTP method (uppercase)\n - userid/cardnumber\n - X-Koha-Date-header\nSigned with the Borrowers API key\n\n\nPseudocode example:\n\nSignature = HMAC-SHA256-HEX('HTTPS' + ' ' +\n                            '/api/v1/borrowers/12?howdoyoudo=voodoo' + ' ' +\n                            'admin69' + ' ' +\n                            '760818212' + ' ' +\n                            'frJIUN8DYpKDtOLCwo//yllqDzg='\n                           );\n",
      "keys": {
        "X-Koha_Date": {
          "type": "dateTime",
          "in": "header",
          "description": "The current time when the request is created. The standard HTTP Date header complying to RFC 1123"
        },
        "Authorization": {
          "type": "string",
          "in": "header",
          "description": "Starts with identifier 'Koha', then you give the userid/cardnumber of the user authenticating and finally the hashed signature."
        },
        "x-koha-permission": {
          "type": "object",
          "in": "not part of the request",
          "description": "The specific permission the user must have. Eg. 'circulation => force_checkout'. Only we can grant these permissions."
        }
      }
    }
  }
}
