{
  "swagger": "2.0",
  "info": {
    "title": "Koha REST API",
    "version": "1",
    "license": {
      "name": "GPL v3",
      "url": "http://www.gnu.org/licenses/gpl.txt"
    },
    "contact": {
      "name": "Koha Team",
      "url": "http://koha-community.org/"
    }
  },
  "x-mojo-around-action": "Koha::REST::V1::koha_authenticate",
  "basePath": "/api/v1",
  "paths": {
    "/biblios/{biblionumber}": {
      "delete": {
        "x-mojo-controller": "Koha::REST::V1::Biblios",
        "x-koha-permission": {
          "editcatalogue": "delete_catalogue"
        },
        "operationId": "deleteBiblio",
        "tags": ["biblios"],
        "summary": "Deletes the given Bibliographic Record",
        "description": "Can fail if there are dependecies to the Biblio.",
        "produces": [
          ""
        ],
        "parameters": [
          {
            "$ref": "#/parameters/biblionumberPathParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleting the Record succeeded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "No such Bibliographic record found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "400": {
            "description": "Cannot delete the Bibliographic Record due to constraints. A constraint can be for example the presence of dependant Items.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          { "multi_key_auth": [] }
        ]
      }
    },
    "/borrowers": {
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Borrowers",
        "x-koha-permission": {
          "borrowers": "*"
        },
        "operationId": "listBorrowers",
        "tags": ["borrowers"],
        "summary": "just a summary",
        "description": "long description",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of borrowers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/borrower"
              }
            }
          }
        },
        "security": [
          { "multi_key_auth": [] }
        ]
      }
    },
    "/borrowers/status": {
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Borrowers",
        "operationId": "status",
        "tags": ["borrowers"],
        "summary": "Returns the Borrower's details and statuses",
        "description": "This endpoint doesn't need other authentication than the proper username and password, and can be used anonymously.<br/>Note: Does not authenticate the Borrower to Koha!",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "uname",
            "description": "The Username the Borrower uses to authenticate",
            "in": "formData",
            "required": "true",
            "type": "string"
          },
          {
            "name": "passwd",
            "description": "The Password the Borrower uses to authenticate",
            "in": "formData",
            "required": "true",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Borrower information",
            "schema": {
              "$ref": "#/definitions/borrowerStatus"
            }
          },
          "400": {
            "description": "Password authentication failed using username or password",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/borrowers/{borrowernumber}": {
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Borrowers",
        "x-koha-permission": {
          "borrowers": "*"
        },
        "operationId": "getBorrower",
        "tags": ["borrowers"],
        "parameters": [
          {
            "$ref": "#/parameters/borrowernumberPathParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A borrower",
            "schema": {
              "$ref": "#/definitions/borrower"
            }
          },
          "404": {
            "description": "Borrower not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          { "multi_key_auth": [] }
        ]
      }
    },
    "/auth/session": {
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Auth",
        "x-koha-permission": {
          "auth": "get_session"
        },
        "operationId": "getSession",
        "tags": ["auth"],
        "parameters": [
          {
            "$ref": "#/parameters/session"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A borrower with SSO-relevant fields",
            "schema": {
              "$ref": "#/definitions/session"
            }
          },
          "404": {
            "description": "Session not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          { "multi_key_auth": [] }
        ]
      }
    },
    "/messages": {
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Messages",
        "operationId": "listMessages",
        "x-koha-permission": {
          "messages": "get_message"
        },
        "tags": ["messages"],
       "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of messages",
            "schema": {
              "type": "array",
              "items": {
                "$ref" : "#/definitions/message"
              }
            }
          },
          "404": {
            "description": "Messages not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "x-mojo-controller": "Koha::REST::V1::Messages",
        "operationId": "createMessage",
        "x-koha-permission": {
          "messages": "create_message"
        },
        "tags": ["messages"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A JSON object containing informations about the new message",
            "required": true,
            "schema": { "$ref": "#/definitions/message" }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "A message",
            "schema": {
                "$ref": "#/definitions/message"
            }
          },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": { "$ref": "#/definitions/error" }
          }
        }
      }
    },
    "/messages/{messagenumber}": {
      "put": {
        "x-mojo-controller": "Koha::REST::V1::Messages",
        "operationId": "updateMessage",
        "x-koha-permission": {
          "messages": "update_message"
        },
        "tags": ["messages"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A JSON object containing informations about the new message",
            "required": false,
            "schema": { "$ref": "#/definitions/message" }
          },
          {
            "$ref": "#/parameters/messagenumberPathParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A message",
            "schema": {
              "$ref" : "#/definitions/message"
            }
          },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": { "$ref": "#/definitions/error" }
          },
          "404": {
            "description": "Message not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "x-mojo-controller": "Koha::REST::V1::Messages",
        "operationId": "deleteMessage",
        "x-koha-permission": {
          "messages": "delete_message"
        },
        "tags": ["messages"],
        "parameters": [
          {
            "$ref": "#/parameters/messagenumberPathParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
         "204": {
            "description": "Deleting the message succeeded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Message not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
     },
      "get": {
        "x-mojo-controller": "Koha::REST::V1::Messages",
        "operationId": "getMessage",
        "x-koha-permission": {
          "messages": "get_message"
        },
        "tags": ["messages"],
        "parameters": [
          {
            "$ref": "#/parameters/messagenumberPathParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A message",
            "schema": {
              "$ref" : "#/definitions/message"
            }
          },
          "404": {
            "description": "Message not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/messages/{messagenumber}/resend": {
      "post": {
        "x-mojo-controller": "Koha::REST::V1::Messages",
        "operationId": "createResend",
        "description": "Resends a message.",
        "x-koha-permission": {
          "messages": "resend_message"
        },
        "tags": ["messages"],
        "parameters": [
          {
            "$ref": "#/parameters/messagenumberPathParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Resending the message succeeded.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Message not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/messages/{messagenumber}/report/labyrintti": {
      "post": {
        "x-mojo-controller": "Koha::REST::V1::Messages::Reports",
        "operationId": "createLabyrinttiReport",
        "tags": ["messages"],
        "parameters": [
          {
            "$ref": "#/parameters/messagenumberPathParam"
          },
          {
            "name": "status",
            "in": "formData",
            "type": "string",
            "description": "Status of the delivery",
            "required": true
          },
          {
            "name": "message",
            "in": "formData",
            "type": "string",
            "description": "Delivery notes",
            "required": true
          }
        ],
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Response for creating a new report. Required status ERROR",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "Response for receiving delivery report with status OK",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Message not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "borrower": {
      "type": "object",
      "properties": {
        "borrowernumber": {
          "$ref": "#/definitions/borrowernumber"
        },
        "cardnumber": {
          "description": "library assigned ID number for borrowers"
        },
        "surname": {
          "description": "borrower's last name"
        },
        "firstname": {
          "description": "borrower's first name"
        }
      }
    },
    "borrowerStatus": {
      "type": "object",
      "properties": {
        "borrowernumber": {
          "$ref": "#/definitions/borrowernumber"
        },
        "cardnumber": {
          "$ref": "#/definitions/cardnumber"
        },
        "surname": {
          "description": "Last name",
          "type": "string"
        },
        "firstname": {
          "description": "First name",
          "type": "string"
        },
        "homebranch": {
          "description": "Home library/branch.",
          "type": "string"
        },
        "fines": {
          "description": "Total due fines",
          "type": "number",
          "format": "double"
        },
        "language": {
          "description": "Desired language of service",
          "type": "string"
        },
        "charge_privileges_denied": {
          "description": "",
          "type": "boolean"
        },
        "renewal_privileges_denied": {
          "description": "",
          "type": "boolean"
        },
        "recall_privileges_denied": {
          "description": "",
          "type": "boolean"
        },
        "hold_privileges_denied": {
          "description": "",
          "type": "boolean"
        },
        "card_reported_lost": {
          "description": "",
          "type": "boolean"
        },
        "too_many_items_charged": {
          "description": "",
          "type": "boolean"
        },
        "too_many_items_overdue": {
          "description": "",
          "type": "boolean"
        },
        "too_many_renewals": {
          "description": "",
          "type": "boolean"
        },
        "too_many_claims_of_items_returned": {
          "description": "",
          "type": "boolean"
        },
        "too_many_items_lost": {
          "description": "",
          "type": "boolean"
        },
        "excessive_outstanding_fines": {
          "description": "",
          "type": "boolean"
        },
        "excessive_outstanding_fees": {
          "description": "",
          "type": "boolean"
        },
        "recall_overdue": {
          "description": "",
          "type": "boolean"
        },
        "too_many_items_billed": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "cardnumber": {
      "description": "Library assigned ID number for Borrowers",
      "type": "string"
    },
    "session": {
      "type": "object",
      "properties": {
        "email": {
          "description": "borrower's primary email address"
        },
        "lastname": {
          "description": "borrower's last name"
        },
        "firstname": {
          "description": "borrower's first name"
        }
      }
    },
    "testedSession": {
      "type": "object",
      "properties": {
        "sessionid": {
          "description": "The Koha sessionid to be tested",
          "type": "string"
        }
      },
      "required": ["sessionid"]
    },
    "borrowernumber": {
      "description": "Borrower internal identifier"
    },
    "message": {
      "type": "object",
      "properties": {
        "message_id": {
          "description": "Message internal identifier",
          "type": "integer"
        },
        "time_queued": {
          "description": "Date and time of when message was placed in queue",
          "type": "string"
        },
        "borrowernumber": {
         "$ref": "#/definitions/borrowernumber"
        },
        "subject": {
          "description": "Subject of the message",
          "type": "string"
        },
       "content": {
          "description": "Content of the message",
          "type": "string"
        },
        "metadata": {
          "description": "",
          "type": "string"
        },
        "letter_code": {
          "description": "",
          "type": "string"
        },
        "content_type": {
         "description": "Content type",
          "type": "string"
        },
        "message_transport_type": {
          "description": "Transport method. Values accepted by default are 'email', 'sms', 'phone' and 'print'",
          "type": "string"
        },
        "status": {
          "description": "Delivery status",
          "type": "string"
        },
        "to_address": {
          "description": "Destination email address",
          "type": "string"
        },
        "from_address": {
          "description": "Source address of email",
          "type": "string"
        },
        "delivery_note": {
          "description": "Additional delivery notes",
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "description": "Error message",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "biblionumberPathParam": {
      "name": "biblionumber",
      "in": "path",
      "description": "Internal biblio identifier",
      "required": true,
      "type": "integer"
    },
    "borrowernumberPathParam": {
      "name": "borrowernumber",
      "in": "path",
      "description": "Internal borrower identifier",
      "required": "true",
      "type": "integer"
    },
    "messagenumberPathParam": {
      "name": "messagenumber",
      "in": "path",
      "description": "Internal message identifier",
      "required": "true",
      "type": "integer"
    },
    "session": {
      "name": "session",
      "description": "The CGISESSID Cookie used to authenticate a session",
      "in": "body",
      "required": "true",
      "schema" : {
        "$ref": "#/definitions/testedSession"
      }
    }
  },
  "securityDefinitions": {
    "multi_key_auth": {
      "type": "custom",
      "description": "Example: 'Authorization: Koha 1:0f049b5ba2f04da7e719b7166dd9e1b0efacf23747798f19efe51eb6e437f84c'\n\nConstructing the Authorization header\n\n-You brand the authorization header with 'Koha'\n-Then you give the userid/cardnumber of the user authenticating.\n-Then the hashed signature.\n\nThe signature is a HMAC-SHA256-HEX hash of several elements of the request,\nseparated by spaces:\n - HTTP method (uppercase)\n - userid/cardnumber\n - X-Koha-Date-header\nSigned with the Borrowers API key\n\n\nPseudocode example:\n\nSignature = HMAC-SHA256-HEX('HTTPS' + ' ' +\n                            '/api/v1/borrowers/12?howdoyoudo=voodoo' + ' ' +\n                            'admin69' + ' ' +\n                            '760818212' + ' ' +\n                            'frJIUN8DYpKDtOLCwo//yllqDzg='\n                           );\n",
      "keys": {
        "X-Koha_Date": {
          "type": "dateTime",
          "in": "header",
          "description": "The current time when the request is created. The standard HTTP Date header complying to RFC 1123"
        },
        "Authorization": {
          "type": "string",
          "in": "header",
          "description": "Starts with identifier 'Koha', then you give the userid/cardnumber of the user authenticating and finally the hashed signature."
        },
        "x-koha-permission": {
          "type": "object",
          "in": "not part of the request",
          "description": "The specific permission the user must have. Eg. 'circulation => force_checkout'. Only we can grant these permissions."
        }
      }
    }
  }
}
