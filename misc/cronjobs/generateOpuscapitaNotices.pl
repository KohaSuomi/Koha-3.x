#!/usr/bin/perl

#
# This script requires wkhtmltopdf to be installed and present in PATH
# in ubuntu it can be installed with command: 
#
# sudo apt-get install wkhtmltopdf
#

use strict;
use warnings;

use HTML::Template;
use Encode qw( decode encode );
use Text::CSV;
use Time::HiRes qw(gettimeofday);
use Archive::Zip qw( :ERROR_CODES :CONSTANTS );
use Net::FTP;
use C4::Context;
use C4::Branch;

#
#FTP-server config
#
my $ftpHost = C4::Context->config('opusFTP')->{'ftpHost'};
my $ftpUser = C4::Context->config('opusFTP')->{'ftpUser'};
my $ftpPass = C4::Context->config('opusFTP')->{'ftpPass'};

my $ignoreFirst = 1; #put 0 here if first line of csv file is not supposed to be skipped
my $csv = Text::CSV->new({sep_char => ';', binary => 1, eol => $/ });

my $fileplace = C4::Context->config('intranetdir');

my $inputFile = $fileplace.'/koha-tmpl/static_content/overdues/overdues.csv'; #CSV-file generated by koha
my $tempOutputFolder = $fileplace.'/koha-tmpl/static_content/overdues/output/'; #folder which will temprarily hold zip files before transferring them to opusCapitas server

sub newLineToBr{
      $_[0] =~ s/\n/<br>\n/g;
      return $_[0];
}

sub toUTF8{
      my $output = decode( 'iso-8859-1', $_[0] );
      $output = encode( 'utf-8', $output );
      return $output;
}

my $currentLine = 0;
open(my $data, '<', $inputFile) or die "Could not open '$inputFile' $!\n";
#while (my $line = <$data>) {
#  chomp $line;
#  if ($csv->parse($line)) {
 while (my $row = $csv->getline ($data)) {
     my @fields = @$row;
	  if($currentLine < 1 && $ignoreFirst > 0){
	       $currentLine++;
	       next;
	  }
#      my @fields = $csv->fields();
   
      my $name = $fields[0];
      my $surname = $fields[1];
      my $address1 = $fields[2];
      my $address2 = $fields[3];
      my $city = $fields[5];
      my $zipcode = $fields[4];
      my $country = $fields[6];
      my $email = $fields[7];
      my $branchcode = $fields[8];
      my $itemcount = $fields[9];
      my $itemsinfo = newLineToBr($fields[10]);
 
      my $letterTemplate = HTML::Template->new(filename => $fileplace.'/koha-tmpl/static_content/overdues/letter.tmpl');
      my $xmlTemplate = HTML::Template->new(filename => $fileplace.'/koha-tmpl/static_content/overdues/xml.tmpl');

      my $branch = GetBranchDetail($branchcode);
      
      my $timestamp = gettimeofday;
  	  my $pdfFile = $timestamp . ".pdf";
      my $xmlFile = $timestamp . ".xml";
      my $zipFile = $timestamp . ".zip";
      
      $letterTemplate->param(BRANCH => $branch->{branchname});
      $letterTemplate->param(BRANCHADDRESS => $branch->{branchaddress1});
      $letterTemplate->param(BRANCHZIPCODE => $branch->{branchzip});
      $letterTemplate->param(BRANCHCITY => $branch->{branchcity});
      $letterTemplate->param(NAME => $name);
      $letterTemplate->param(SURNAME => $surname);
      $letterTemplate->param(ADDRESS1 => $address1);
      $letterTemplate->param(ADDRESS2 => $address2);
      $letterTemplate->param(ZIPCODE => $zipcode);
      $letterTemplate->param(CITY => $city);
      $letterTemplate->param(ITEMINFO => $itemsinfo);
  
      $xmlTemplate->param(NAME => $name);
      $xmlTemplate->param(SURNAME => $surname);
      $xmlTemplate->param(ADDRESS1 => $address1);
      $xmlTemplate->param(ADDRESS2 => $address2);
      $xmlTemplate->param(ZIPCODE => $zipcode);
      $xmlTemplate->param(CITY => $city);
      $xmlTemplate->param(EXFILENAME => $pdfFile);
      
      open(my $fh, '>', $xmlFile);
      print $fh $xmlTemplate->output;;
      close $fh;
      
      open PDF, "| wkhtmltopdf - " . $pdfFile;
      print PDF $letterTemplate->output;
      close(PDF);
      
      my $zip = Archive::Zip->new();
      $zip->addFile( $pdfFile );
      $zip->addFile( $xmlFile );

      unless ( $zip->writeToFileNamed($tempOutputFolder . $zipFile) == AZ_OK ) {
           die 'error creating zip-file';
      }

      unlink $pdfFile;
      unlink $xmlFile;

#  } else {
#      warn "Line could not be parsed: $line\n";
#  }
  $currentLine++;
}

my $ftp = Net::FTP->new($ftpHost) or die "Cannot connect to ftp server";
$ftp->login($ftpUser, $ftpPass) or die "Cannot login to ftp server", $ftp->message;

my @zipfiles = <output/*>;
foreach my $file (@zipfiles) {
    $ftp->put($file, $file . ".temppi") or die "Cannot upload file";
    $ftp->rename($file . ".temppi", $file . ".valmis") or die "Cannot rename file";
    unlink $file;
}

$ftp->quit;